{
  "version": "1.0.0",
  "defaultFile": "contracts/HelloWorld.sol",
  "environment": "solidity",
  "setupCommands": ["npm i", "npx hardhat compile"],
  "compileCommand": "npx hardhat compile",
  "tests": [
    { "itShould": "Compile all contracts", "command": "sh learn_tests/01.sh" },
    { "itShould": "Deploy HelloWorld to dummy blockchain", "command": "sh learn_tests/02.sh" },
    { "itShould": "Output greet 'Hello World!'", "command": "sh learn_tests/03.sh" },
    {
      "itShould": "Deploy Counter to dummy blockchain",
      "command": "sh learn_tests/04.sh"
    },
    { "itShould": "Call get() and output count value", "command": "sh learn_tests/05.sh" },
    { "itShould": "Call inc() and output incremented count value", "command": "sh learn_tests/06.sh" },
    { "itShould": "Call dec() and output decremented count value", "command": "sh learn_tests/07.sh" },
    {
      "itShould": "Deploy Primitives to dummy blockchain",
      "command": "sh learn_tests/08.sh"
    },
    {
      "itShould": "Deploy Variables to dummy blockchain",
      "command": "sh learn_tests/09.sh"
    },
    {
      "itShould": "Deploy Constants to dummy blockchain",
      "command": "sh learn_tests/10.sh"
    },
    {
      "itShould": "Deploy Immutable to dummy blockchain",
      "command": "sh learn_tests/11.sh"
    },
    {
      "itShould": "Deploy SimpleStorage to dummy blockchain",
      "command": "sh learn_tests/12.sh"
    },
    {
      "itShould": "Deploy SimpleStorage, call get() and output zero num value",
      "command": "sh learn_tests/13.sh"
    },
    {
      "itShould": "Deploy SimpleStorage, call set(3) and set 3 as num value",
      "command": "sh learn_tests/14.sh"
    },
    {
      "itShould": "Deploy EtherUnits contract to dummy blockchain",
      "command": "sh learn_tests/15.sh"
    },
    {
      "itShould": "Deploy Gas contract to dummy blockchain",
      "command": "sh learn_tests/16.sh"
    },
    {
      "itShould": "Deploy Gas contract, call forever() and output a error saying Transaction ran out of gas",
      "command": "sh learn_tests/17.sh"
    },
    {
      "itShould": "Deploy IfElse contract to dummy blockchain",
      "command": "sh learn_tests/18.sh"
    },
    {
      "itShould": "Deploy IfElse contract, call foo(5), foo(11) and foo(30) printing 0,1,2 respectively",
      "command": "sh learn_tests/19.sh"
    },
    {
      "itShould": "Deploy IfElse contract, call ternary(5), ternary(11) printing 1,2 respectively",
      "command": "sh learn_tests/20.sh"
    },
    {
      "itShould": "Deploy Loop contract to dummy blockchain",
      "command": "sh learn_tests/21.sh"
    },
  ],
  "learnerAccessibleFileList": ["contracts/*"]
}
